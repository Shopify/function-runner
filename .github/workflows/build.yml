name: Build

on:
  workflow_call:
    inputs:
      tag_name:
        description: "Tag name"
        required: true
        type: string
      should_upload_artifacts:
        description: "Should upload artifacts"
        required: false
        type: boolean
        default: false

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - name: x86_64-unknown-linux-gnu
            os: ubuntu-22.04
            path: target/x86_64-unknown-linux-gnu/release/function-runner
            asset_name: function-runner-x86_64-linux-${{ inputs.tag_name }}
            shasum_cmd: sha256sum
          - name: aarch64-unknown-linux-gnu
            os: ubuntu-22.04
            path: target/aarch64-unknown-linux-gnu/release/function-runner
            asset_name: function-runner-arm-linux-${{ inputs.tag_name }}
            shasum_cmd: sha256sum
          - name: x86_64-apple-darwin
            os: macos-latest
            path: target/x86_64-apple-darwin/release/function-runner
            asset_name: function-runner-x86_64-macos-${{ inputs.tag_name }}
            shasum_cmd: shasum -a 256
          - name: aarch64-apple-darwin
            os: macos-latest
            path: target/aarch64-apple-darwin/release/function-runner
            asset_name: function-runner-arm-macos-${{ inputs.tag_name }}
            shasum_cmd: shasum -a 256
          - name: x86_64-pc-windows-msvc
            os: windows-latest
            path: target\x86_64-pc-windows-msvc\release\function-runner.exe
            asset_name: function-runner-x86_64-windows-${{ inputs.tag_name }}
            shasum_cmd: sha256sum

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Install cross compiler
        if: ${{ matrix.name == 'aarch64-unknown-linux-gnu' }}
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu

      - name: Set up cross compiler env variables
        if: ${{ matrix.name == 'aarch64-unknown-linux-gnu' }}
        run: |
          echo "CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=aarch64-linux-gnu-gcc" >> $GITHUB_ENV
          echo "CC_aarch64_unknown_linux_gnu=aarch64-linux-gnu-gcc" >> $GITHUB_ENV
          echo "CXX_aarch64_unknown_linux_gnu=aarch64-linux-gnu-g++" >> $GITHUB_ENV

      - name: Install target
        run: rustup target add ${{ matrix.name }}

      - name: Build ${{ matrix.name }}
        run: cargo build --release --target ${{ matrix.name }} --package function-runner

      - name: Archive assets
        if: ${{ inputs.should_upload_artifacts }}
        run: gzip -k -f ${{ matrix.path }} && mv ${{ matrix.path }}.gz ${{ matrix.asset_name }}.gz

      - name: Upload assets to artifacts
        if: ${{ inputs.should_upload_artifacts }}
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: ${{ matrix.asset_name }}.gz
          path: ${{ matrix.asset_name }}.gz

      - name: Generate asset hash
        if: ${{ inputs.should_upload_artifacts }}
        run: ${{ matrix.shasum_cmd }} ${{ matrix.asset_name }}.gz | awk '{ print $1 }' > ${{ matrix.asset_name }}.gz.sha256

      - name: Upload asset hash to artifacts
        if: ${{ inputs.should_upload_artifacts }}
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: ${{ matrix.asset_name }}.gz.sha256
          path: ${{ matrix.asset_name }}.gz.sha256
